id=c()
for(i in 1:nrow(proov3)) {
lingid=strsplit(proov3$link[i], split=",|;")
ids=rep(proov3$id[i], length(lingid[[1]]))
tulem=rbind(tulem, data.frame(link=lingid, id=ids))
link=c(link, lingid)
id=c(id, ids)
tulem=data.frame(link, id)
#print(lingid)
#print(ids)
print(tulem)
}
tulem=data.frame(NULL)
link=c()
id=c()
for(i in 1:nrow(proov3)) {
lingid=strsplit(proov3$link[i], split=",|;")
ids=rep(proov3$id[i], length(lingid[[1]]))
tulem=rbind(tulem, data.frame(link=lingid, id=ids))
link=c(link, lingid)
id=c(id, ids)
#print(lingid)
#print(ids)
#print(tulem)
}
tulem=data.frame(link, id)
tulem=data.frame(link, id)
link=c()
id=c()
for(i in 1:nrow(proov3)) {
lingid=strsplit(proov3$link[i], split=",|;")
ids=rep(proov3$id[i], length(lingid[[1]]))
tulem=rbind(tulem, data.frame(link=lingid, id=ids))
link=c(link, lingid)
id=c(id, ids)
#print(lingid)
#print(ids)
#print(tulem)
}
link=c()
id=c()
for(i in 1:nrow(proov3)) {
lingid=strsplit(proov3$link[i], split=",|;")
ids=rep(proov3$id[i], length(lingid[[1]]))
link=c(link, lingid)
id=c(id, ids)
#print(lingid)
#print(ids)
#print(tulem)
}
tulem=data.frame(link, id)
link
id
data.frame(link)
as.data.frame(link)
melt(link)
tulem=data.frame(melt(link), id)
View(tulem)
strCount=str_count(riigit$link, "riigiteataja")
mitmekordsed=riigit[strCount>1,]
link=c()
id=c()
for(i in 1:nrow(mitmekordsed)) {
lingid=strsplit(mitmekordsed$link[i], split=",|;")
ids=rep(mitmekordsed$id[i], length(lingid[[1]]))
link=c(link, lingid)
id=c(id, ids)
}
tulem=data.frame(melt(link), id)
View(tulem)
tulem=data.frame(link=melt(link), id)
View(tulem)
tulem=data.frame(melt(link), id)
tulem$L1=NULL
strCount
proov=riigit[strCount==1,]
tulem
names(tulem)=c("link","id")
riigit=riigit[strCount==1,]
riigit=rbind(riigit, tulem)
for(i in 1:nrow(riigit)){
if(!grepl("leiakehtiv", riigit$link[i])) {
riigit$link[i]=paste0(riigit$link[i], "?leiakehtiv")
} else {
next
}
}
library(dplyr)
topAktid=riigit%>%
group_by(link)%>%
summarise(n=n())
topAktid
topAktid=topAktid[order(topAktid$n),]
View(topAktid)
topAktid=topAktid[-order(topAktid$n),]
View(topAktid)
topAktid=riigit%>%
group_by(link)%>%
summarise(n=n())
topAktid=topAktid[order(-topAktid$n),]
View(topAktid)
library(rvest)
i=1
page=read_html(topAktid$link[i])
pealkiri=page %>%
html_node("#article-content > h1:nth-child(1)") %>%
html_text()
pealkiri
topAktid$pealkiri=NA
for(i in 1:3) {
page=read_html(topAktid$link[i])
pealkiri=page %>%
html_node("#article-content > h1:nth-child(1)") %>%
html_text()
pealkiri
}
for(i in 1:3) {
page=read_html(topAktid$link[i])
pealkiri=page %>%
html_node("#article-content > h1:nth-child(1)") %>%
html_text()
print(pealkiri)
}
for(i in 1:3) {
page=read_html(topAktid$link[i])
pealkiri=page %>%
html_node("#article-content > h1:nth-child(1)") %>%
html_text()
topAktid$pealkiri[i]=pealkiri
Sys.sleep(1)
cat(i, pealkiri)
}
for(i in 1:3) {
page=read_html(topAktid$link[i])
pealkiri=page %>%
html_node("#article-content > h1:nth-child(1)") %>%
html_text()
topAktid$pealkiri[i]=pealkiri
Sys.sleep(1)
cat(i, pealkiri, "\n")
}
topAktid$pealkiri
for(i in 1:nrow(topAktid)) {
#for(i in 1:3) {
page=read_html(topAktid$link[i])
pealkiri=page %>%
html_node("#article-content > h1:nth-child(1)") %>%
html_text()
topAktid$pealkiri[i]=pealkiri
Sys.sleep(1)
cat(i, pealkiri, "\n")
}
topAktid$link=str_trim(topAktid$link, side="both")
for(i in 213:nrow(topAktid)) {
page=read_html(topAktid$link[i])
pealkiri=page %>%
html_node("#article-content > h1:nth-child(1)") %>%
html_text()
topAktid$pealkiri[i]=pealkiri
Sys.sleep(1)
cat(i, pealkiri, "\n")
}
for(i in 324:nrow(topAktid)) {
page=read_html(topAktid$link[i])
pealkiri=page %>%
html_node("#article-content > h1:nth-child(1)") %>%
html_text()
topAktid$pealkiri[i]=pealkiri
Sys.sleep(1)
cat(i, pealkiri, "\n")
}
topAktid$link[325]
for(i in 324:nrow(topAktid)) {
tryget <- try({
page=read_html(topAktid$link[i])
pealkiri=page %>%
html_node("#article-content > h1:nth-child(1)") %>%
html_text()
topAktid$pealkiri[i]=pealkiri
Sys.sleep(1)
cat(i, pealkiri, "\n")
})
if(class(tryget)=='try-error') {
cat(i, "pealkirja pole", "\n")
topAktid$pealkiri[i]=NA
next
}
}
topAktid[grepl("Käibemaksuseadus", topAktid$link),]
topAktid[grepl("Käibemaksuseadus", topAktid$link),]
View(topAktid)
topAktid[grepl("Käibemaksu", topAktid$link),]
topAktid[grepl("Käibemaksuseadus1", topAktid$link),]
class(topAktid)
topAktid[grepl("Käibemaksuseadus1", topAktid$pealkiri),]
topAktid[grepl("Käibemaksuseadus1", topAktid$pealkiri),"link"]
topAktid[ topAktid$pealkiri==NA,"link"]
topAktid[ is.na(topAktid$pealkiri),"link"]
topAktid[ is.na(topAktid$pealkiri),]
page=read_html("https://www.riigiteataja.ee/akt/130122014001?leiakehtiv")
pealkiri=page %>%
html_node("#article-content > h1:nth-child(1)") %>%
html_text()
pealkiri
pealkiri=page %>%
html_node("#article-content > h1:nth-child(2)") %>%
html_text()
pealkiri
topAktid[ is.na(topAktid$pealkiri),]
for(i in 1:nrow(topAktid)) {
if(is.na(topAktid$pealkiri[i])) {
tryget <- try({
page=read_html(topAktid$link[i])
pealkiri=page %>%
html_node("article-content > h1:nth-child(2)") %>%
html_text()
topAktid$pealkiri[i]=pealkiri
Sys.sleep(1)
cat(i, pealkiri, "\n")
})
if(class(tryget)=='try-error') {
cat(i, "pealkirja pole", "\n")
topAktid$pealkiri[i]=NA
next
}
} else {
next
}
}
View(topAktid)
topAktid$link[6]
for(i in 1:nrow(topAktid)) {
if(is.na(topAktid$pealkiri[i])) {
tryget <- try({
page=read_html(topAktid$link[i])
pealkiri=page %>%
html_node("#article-content > h1:nth-child(2)") %>%
html_text()
topAktid$pealkiri[i]=pealkiri
Sys.sleep(1)
cat(i, pealkiri, "\n")
})
if(class(tryget)=='try-error') {
cat(i, "pealkirja pole", "\n")
topAktid$pealkiri[i]=NA
next
}
} else {
next
}
}
topAktid[ is.na(topAktid$pealkiri),]
riigit$link=str_trim(riigit$link, side="both")
topAktid$link=str_trim(topAktid$link, side="both")
riigit2=merge(riigit, topAktid[,c("link", "pealkiri")])
View(riigit2)
riigit[is.na(riigit$link),]
riigit[is.na(riigit$pealkiri),]
riigit[is.na(riigit$id),]
View(riigit)
str(riigit2)
riigit2[is.na(riigit2$id),]
riigit2[is.na(riigit2$pealkiri),]
riigit2[is.na(riigit2$link),]
length(unique(topAktid$link))
length(unique(riigit$link))
length(unique(rbind(riigit$link,topAktid$link))
)
proov=rbind(riigit$link,topAktid$link)
proov=riigit$link,topAktid$link
proov=c(riigit$link,topAktid$link)
length(unique(proov))
riigit=riigit2
AktideViited=riigit%>%
group_by(pealkiri)%>%
summarise(n=n())
View(AktideViited)
AktideViited=AktideViited[order(-AktideViited$n),]
View(AktideViited)
library(ggplot2)
ggplot(AktideViited[1:10,], aes(x=pealkiri, y=n))+
geom_point()
ggplot(AktideViited[1:10,], aes(x=order(pealkiri,n), y=n))+
geom_point()
View(AktideViited)
ggplot(AktideViited[1:10,], aes(x=order(as.character(pealkiri),n), y=n))+
geom_point()
class(AktideViited$pealkiri)
AktideViited[1:10,]
AktideViited=AktideViited[order(-AktideViited$n),]
AktideViited[1:10,]
View(AktideViited)
head(AktideViited)
ggplot(AktideViited, aes(x=reorder(pealkiri,n), y=n))+
geom_point()
ggplot(AktideViited[1:10], aes(x=reorder(pealkiri,n), y=n))+
geom_point()
AktideViited[1:10]
library(ggplot2)
ggplot(AktideViited[1:10], aes(x=reorder(pealkiri,n), y=n))+
geom_point()
ggplot(AktideViited[1:10,], aes(x=reorder(pealkiri,n), y=n))+
geom_point()
ggplot(AktideViited[1:10,], aes(x=reorder(pealkiri,n), y=n))+
geom_point()+
theme_minimal()+
coord_flip()
ggplot(AktideViited[1:20,], aes(x=reorder(pealkiri,n), y=n))+
geom_point()+
theme_minimal()+
coord_flip()
ggplot(AktideViited[1:40,], aes(x=reorder(pealkiri,n), y=n))+
geom_point()+
theme_minimal()+
coord_flip()
ggplot(AktideViited[1:40,], aes(x=reorder(pealkiri,n), y=n))+
geom_point()+
theme_minimal()+
scale_x_discrete(labels = abbreviate)+
coord_flip()
ggplot(AktideViited[1:40,], aes(x=reorder(pealkiri,n), y=n))+
geom_point()+
theme_minimal()+
# scale_x_discrete(labels = abbreviate)+
scale_x_discrete(labels = substr(pealkiri,1,20))+
coord_flip()
ggplot(AktideViited[1:40,], aes(x=reorder(pealkiri,n), y=n))+
geom_point()+
theme_minimal()+
# scale_x_discrete(labels = abbreviate)+
scale_x_discrete(aes(labels = substr(pealkiri,1,20)))+
coord_flip()
ggplot(AktideViited[1:40,], aes(x=reorder(pealkiri,n), y=n))+
geom_point()+
theme_minimal()+
# scale_x_discrete(labels = abbreviate)+
scale_x_discrete(aes(labels = substr(pealkiri,1,2)))+
coord_flip()
substr(AktideViited$pealkiri,1,2)
AktideViited$lyhem=substr(AktideViited$pealkiri,1:30)
AktideViited$lyhem=substr(AktideViited$pealkiri,1,30)
AktideViited$lyhem
AktideViited$lyhem=substr(AktideViited$pealkiri,1,50)
AktideViited$lyhem
ggplot(AktideViited[1:40,], aes(x=reorder(lyhem,n), y=n))+
geom_point()+
theme_minimal()+
# scale_x_discrete(labels = abbreviate)+
#scale_x_discrete(aes(labels = substr(pealkiri,1,2)))+
coord_flip()
ggplot(AktideViited, aes(x=reorder(lyhem,n), y=n))+
geom_point()+
theme_minimal()+
scale_x_discrete(labels = abbreviate)
ggplot(AktideViited[1:40,], aes(x=reorder(lyhem,n), y=n))+
geom_point()+
theme_minimal()+
# scale_x_discrete(labels = abbreviate)+
coord_flip()
library(dplyr)
saveRDS(riigiteatajaOigusaktid,file="./andmed/riigiteatajaOigusaktid.RDS")
saveRDS(riigit,file="./andmed/riigiteatajaOigusaktid.RDS")
library(dplyr)
teenusAkte=riigit%>%
group_by(teenus)%>%
sumarise(n=n())
teenusAkte=riigit%>%
group_by(id)%>%
sumarise(n=n())
teenusAkte=riigit%>%
group_by(id)%>%
summarise(n=n())
View(teenusAkte)
teenusAkte=teenusAkte[order(-teenusAkte$n),]
ggplot(teenusAkte, aes(x=reorder(id,n), y=n))+
geom_point()+
theme_minimal()
ggplot(teenusAkte[1:30,], aes(x=reorder(id,n), y=n))+
geom_point()+
theme_minimal()
ggplot(teenusAkte[1:30,], aes(x=reorder(id,n), y=n))+
geom_point()+
theme_minimal()+
coord_flip()
names(andmedLai)[1:20]
riigit2=merge(riigit, andmedLai[c("identifikaator","nimetus" ),], by.x=id,
by.y=identifkaator)
riigit2=merge(riigit, andmedLai[c("identifikaator","nimetus" ),], by.x="id",
by.y="identifkaator")
View(riigit)
riigit2=merge(riigit, andmedLai[c("identifikaator","nimetus" ),], by.x="id",
by.y="identifikaator")
riigit2=merge(riigit, andmedLai[,c("identifikaator","nimetus" )], by.x="id",
by.y="identifikaator", all.x =T)
View(riigit2)
riigit=merge(riigit, andmedLai[,c("identifikaator","nimetus" )], by.x="id",
by.y="identifikaator", all.x =T)
teenusAkte=riigit%>%
group_by(id)%>%
summarise(n=n())
teenusAkte=teenusAkte[order(-teenusAkte$n),]
View(teenusAkte)
teenusAkte=riigit%>%
group_by(nimetus)%>%
summarise(n=n())
teenusAkte=teenusAkte[order(-teenusAkte$n),]
#plotime
ggplot(teenusAkte[1:30,], aes(x=reorder(nimetus,n), y=n))+
geom_point()+
theme_minimal()+
coord_flip()
riigit[grepl("Sünni regis", riigit$,),]
riigit[grepl("Sünni regis", riigit$nimetus),]
ggplot(AktideViited[1:40,], aes(x=reorder(lyhem,n), y=n))+
geom_point()+
theme_minimal()+
# scale_x_discrete(labels = abbreviate)+
coord_flip()
library(igraph)
demo(package="igraph")
View(riigit)
TeenusSeadus=table(riigit[,c("pealkiri", "nimetus"),])
TeenusSeadus
proov=get.adjacency(your-network)
proov=get.adjacency(TeenusSeadus)
TeenusSeadus=as.matrix(TeenusSeadus)
proov=get.adjacency(TeenusSeadus)
TeenusSeadus=table(riigit[,c("pealkiri", "nimetus"),])
TeenusSeadus=Matrix(TeenusSeadus)
libraryMatrix
library(Matrix)
TeenusSeadus=Matrix(TeenusSeadus)
proov=get.adjacency(TeenusSeadus)
TeenusSeadus=table(riigit[,c("pealkiri", "nimetus")])
TeenusSeadus=Matrix(TeenusSeadus)
proov=get.adjacency(TeenusSeadus)
df.g <- graph.data.frame(d = riigit[,c("pealkiri", "nimetus")],
directed = FALSE)
plot(df.g, vertex.label = V(df.g)$name)
names(riigit)
plot(df.g, vertex.label = NA, layout=layout.bipartite)
plot(df.g, vertex.label = NA)
network=riigit[, c("pealkiri", "id")]
networkTable=table(network)
networkTable=Matrix(table(network))
colSums(networkTable)
summa=colSums(networkTable)
length(summa[summa>1])
length(summa[summa>2])
length(summa[summa>3])
networkTable=networkTable[, colSums(networkTable)>3]
df.g <- graph.data.frame(d = networkTable],
directed = FALSE)
df.g <- graph.data.frame(d = networkTable,
directed = FALSE)
df <- data.frame(
A = c("Berlin", "Amsterdam", "New York") ,
B = c("Munich", "Utrecht", "Chicago"))
df.g <- graph.data.frame(d = df, directed = FALSE)
plot(df.g, vertex.label = V(df.g)$name)
graph_from_data_frame(network,directed = F)
g=graph_from_data_frame(network,directed = F)
plot(g, vertex.label = NA)
network=riigit[1:20, c("pealkiri", "id")]
g=graph_from_data_frame(network,directed = F)
plot(g, vertex.label = NA)
plot(g)
seadus=riigit%>%
group_by(pealkiri)%>%
summarise(n=n())
View(seadus)
AktideViited
View(AktideViited)
AktideViited[1:20]
network=network["pealkiri"%in% Aktideviited$pealkiri[Aktideviited$n>3],]
Aktideviited$pealkiri[Aktideviited$n>3]
AktideViited$pealkiri[AktideViited$n>3]
network=network["pealkiri"%in% AktideViited$pealkiri[AktideViited$n>3],]
network=riigit[, c("pealkiri", "id")]
View(network)
network=network[network$pealkiri%in% AktideViited$pealkiri[AktideViited$n>3],]
idAkte=riigit%>%
group_by(id)%>%
summarise(n=n())
View(idAkte)
View(idAkte)
network=network[network$id%in% idAkte$id[idAkte$n>3],]
network=network[network$pealkiri%in% AktideViited$pealkiri[AktideViited$n>10],]
network=network[network$id%in% idAkte$id[idAkte$n>10],]
g=graph_from_data_frame(network,directed = F)
plot(g)
network=network[network$pealkiri%in% AktideViited$pealkiri[AktideViited$n>8],]
network=network[network$id%in% idAkte$id[idAkte$n>8],]
g=graph_from_data_frame(network,directed = F)
plot(g)
network=riigit[, c("pealkiri", "id")]
#eemaldame kus on vähe viiteid
network=network[network$pealkiri%in% AktideViited$pealkiri[AktideViited$n>8],]
network=network[network$id%in% idAkte$id[idAkte$n>8],]
g=graph_from_data_frame(network,directed = F)
plot(g)
network=riigit[, c("pealkiri", "id")]
#eemaldame kus on vähe viiteid
network=network[network$pealkiri%in% AktideViited$pealkiri[AktideViited$n>8]|network$id%in% idAkte$id[idAkte$n>8],]
network=network[network$pealkiri%in% AktideViited$pealkiri[AktideViited$n>10]|network$id%in% idAkte$id[idAkte$n>10],]
g=graph_from_data_frame(network,directed = F)
plot(g)
network=riigit[, c("pealkiri", "id")]
#eemaldame kus on vähe viiteid
network=network[network$pealkiri%in% AktideViited$pealkiri[AktideViited$n>30]|network$id%in% idAkte$id[idAkte$n>30],]
g=graph_from_data_frame(network,directed = F)
plot(g)
